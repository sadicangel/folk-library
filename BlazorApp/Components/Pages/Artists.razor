@page "/artists"
@attribute [StreamRendering]
@inject IFolkHttpClient HttpClient

<PageTitle>Artists</PageTitle>

@if (artists == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Year</th>
                <th>Country</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artists in artists)
            {
                <tr>
                    <td>@artists.ShortName</td>
                    <td>@artists.YearString</td>
                    <td>@artists.Location.CountryName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IReadOnlyList<Artist>? artists;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };

        var response = await HttpClient.GetArtistsAsync();

        artists = response.Artists.OrderBy(a => a.YearString).ToList();
    }
}
